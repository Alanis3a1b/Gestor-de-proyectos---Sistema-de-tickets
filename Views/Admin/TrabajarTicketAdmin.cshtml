@{
    ViewBag.Title = "Trabajar Ticket Admin";
    var ticket = ViewData["Ticket"] as dynamic;
}

@functions {
    string GetPrioridadName(int id_prioridad)
    {
        switch (id_prioridad)
        {
            case 1:
                return "Normal";
            case 2:
                return "Media";
            case 3:
                return "Alta";
            case 4:
                return "Crítico";
            default:
                return "Desconocido";
        }
    }
}

<div class="container mt-5">
    <div class="card mb-3">
        <div class="card-header" style="background-color: #562888; color: white;">
            TICKET # @ticket.id_ticket
        </div>



        <div class="card-body" style="background-color: #d3d3d3; color: black;">

            <h3>Datos del ticket</h3>
            <hr class="border-5 border-dark" style="border-block-color:black">

            <div class="Con">

                @* Apartado Detalles Ticket *@

                <div class="box">
                    <p class="fw-bold">
                        Detalles de Ticket
                    </p>
                    <div class="form-group">
                        <label for="ticketTitle" class="fw-bold">Título del ticket:</label>
                        <input type="text" class="form-control" id="ticketTitle" value="@ticket.nombre_ticket" readonly>
                    </div>
                    <p class="fw-bold">
                        Descripción del Ticket
                    </p>
                    <div class="form-group p-2" style="background-color: #e9edee; border-radius: 5px">
                        @Html.Raw(ticket.descripcion)
                    </div>
                    <div class="form-group">
                        <label for="estado" class="fw-bold">Estado:</label>
                        <input type="text" class="form-control" id="estado" value="@ticket.Estado" readonly>
                    </div>
                    <br />
                    @* Mostrar y descargar archivo adjunto *@
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(ticket.url_archivo))
                        {
                            <a href="@Url.Action("DescargarArchivo", "Admin", new { filePath = ticket.url_archivo })" class="btn btn-info p-2 m-2" style=" background-color: #562888; color: white " download>Descargar archivo</a>
                        }
                        else
                        {
                            <p>No hay archivo adjunto.</p>
                        }
                    </div>

                    @*Prioridad*@
                    <div class="form-group">
                        <label for="prioridad" class="fw-bold">Prioridad:</label><br />
                        <input type="radio" id="normal" name="prioridad" value="1" @(ticket.id_prioridad == 1 ? "checked" : "") onclick="uncheckOthersPrioridad(this)">
                        <label for="normal">Normal</label><br />
                        <input type="radio" id="media" name="prioridad" value="2" @(ticket.id_prioridad == 2 ? "checked" : "") onclick="uncheckOthersPrioridad(this)">
                        <label for="media">Media</label><br />
                        <input type="radio" id="alta" name="prioridad" value="3" @(ticket.id_prioridad == 3 ? "checked" : "") onclick="uncheckOthersPrioridad(this)">
                        <label for="alta">Alta</label><br />
                        <input type="radio" id="critico" name="prioridad" value="4" @(ticket.id_prioridad == 4 ? "checked" : "") onclick="uncheckOthersPrioridad(this)">
                        <label for="critico">Crítico</label>
                    </div>
                </div>


                @* Fin Apartado Detalles Ticket *@

                @* Apartado info Contacto *@
                <div class="box">
                    <p class="fw-bold">
                        Información de contacto
                    </p>
                    <div class="form-group">
                        <label for="fullName" class="fw-bold">Nombre completo:</label>
                        <input type="text" class="form-control" id="fullName" value="@ticket.nombre" readonly>
                    </div>

                    <div class="form-group">
                        <label for="phone" class="fw-bold">Número de teléfono:</label>
                        <input type="text" class="form-control" id="phone" value="@ticket.telefono_usuario" readonly>
                    </div>
                    <div class="form-group">
                        <label for="email" class="fw-bold">Email:</label>
                        <input type="email" class="form-control" id="email" value="@ticket.correo_usuario" readonly>
                    </div>
                    <hr>

                </div>

         </div>


            @* Respuesta al Ticket *@

            <div class="form-group">
                <label for="respuesta" class="fw-bold">Respuesta:</label>
                <textarea id="respuesta" name="respuesta" class="form-control">@Html.Raw(!string.IsNullOrEmpty(ticket.respuesta) ? ticket.respuesta : "Sin respuesta por el momento")</textarea>
            </div>


            @*Estado*@
            <div class="left-container">
                <div class="p-5 fw-bold">
                    <label for="estadoCombo" class="fw-bold">Cambiar Estado:</label><br />
                </div>

                <div class ="p-2">
                    <input type="radio" id="abierto" name="estado" value="1" @(ticket.id_estado == 1 ? "checked" : "") onclick="uncheckOthers(this)">
                    <label for="abierto">Abierto</label><br />

                    <input type="radio" id="espera" name="estado" value="2" @(ticket.id_estado == 2 ? "checked" : "") onclick="uncheckOthers(this)">
                    <label for="espera">En espera de información del cliente</label><br />

                    <input type="radio" id="cerrado" name="estado" value="3" @(ticket.id_estado == 3 ? "checked" : "") onclick="uncheckOthers(this)">
                    <label for="cerrado">Cerrado</label><br />

                    <input type="radio" id="resuelto" name="estado" value="4" @(ticket.id_estado == 4 ? "checked" : "") onclick="uncheckOthers(this)">
                    <label for="resuelto">Resuelto</label>
                </div>
            </div>


            @*Asignar Usuario*@
            <div class="form-group">
                <label for="usuarioAsignado" class="fw-bold">Asignar Ticket:</label>
                <select id="usuarioAsignado" name="usuarioAsignado" class="form-control">
                    @foreach (var usuario in ViewBag.Usuarios)
                    {
                        <option value="@usuario.id_usuario">@usuario.nombre</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-lg-end">
        <button type="button" class="btn btn-primary btn-lg small p-2 m-2" style="background-color: #562888;  padding-bottom" onclick="guardarCambios()">Guardar Cambios</button>
        <button type="button" class="btn btn-primary btn-lg small p-2 m-2" style="background-color: #562888;  padding-bottom" onclick="history.back()">REGRESAR</button>
    </div>
</div>






@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://cdn.tiny.cloud/1/rx66b37yvvqyq620z86ljevusuqr1tmvt0aa5gt9oaeyqi1f/tinymce/5/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: '#respuesta',
            plugins: 'image imagetools media link codesample table',
            toolbar: 'undo redo | formatselect | bold italic underline | fontsizeselect | fontselect',
        });

        function uncheckOthers(checkbox) {
            var checkboxes = document.querySelectorAll('input[name="estado"]');
            checkboxes.forEach(function (cb) {
                if (cb !== checkbox) {
                    cb.checked = false;
                }
            });
        }

        function uncheckOthersPrioridad(checkbox) {
                var checkboxes = document.querySelectorAll('input[name="prioridad"]');
                checkboxes.forEach(function (cb) {
                    if (cb !== checkbox) {
                        cb.checked = false;
                    }
                });
            }

    function guardarCambios() {
        // Obtener el valor de respuesta del editor TinyMCE
        var respuesta = tinymce.get('respuesta').getContent();

        var estado = 0;
        var id_ticket = @ticket.id_ticket;
        var prioridad = 0;
        var id_usuario_asignado = document.getElementById('usuarioAsignado').value;

        var estadoRadios = document.querySelectorAll('input[name="estado"]');
        estadoRadios.forEach(function (radio) {
            if (radio.checked) {
                estado = parseInt(radio.value);
            }
        });

        var prioridadRadios = document.querySelectorAll('input[name="prioridad"]');
        prioridadRadios.forEach(function (radio) {
            if (radio.checked) {
                prioridad = parseInt(radio.value);
            }
        });

        // Aquí puedes hacer la llamada AJAX para actualizar el ticket en la base de datos
        // Por ejemplo, usando jQuery
        $.ajax({
            url: '/Admin/GuardarCambios',
            method: 'POST',
            data: { id_ticket: id_ticket, respuesta: respuesta, id_estado: estado, id_prioridad: prioridad, id_usuario_asignado: id_usuario_asignado },
            success: function (response) {
                // Aquí puedes manejar la respuesta del servidor
                console.log(response);
                window.location.href = '/Admin/TicketEditado'; // Redirigir a la vista TicketEditado
            },
            error: function (error) {
                // Aquí puedes manejar
  
                    console.error(error);
                    alert('Hubo un error al guardar los cambios. Por favor, inténtelo de nuevo.');
                }
            });
        }
    </script>
}

